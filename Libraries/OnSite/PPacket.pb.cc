// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PPacket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PPacket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace OnSite {

namespace {

const ::google::protobuf::Descriptor* PUpdateLuaString_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PUpdateLuaString_reflection_ = NULL;
const ::google::protobuf::Descriptor* PUpdateLuaBoolean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PUpdateLuaBoolean_reflection_ = NULL;
const ::google::protobuf::Descriptor* PUpdateLuaNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PUpdateLuaNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* PUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* PFilePart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PFilePart_reflection_ = NULL;
const ::google::protobuf::Descriptor* PControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* PPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PPacket_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PUpdateType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PPacketType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PControlType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_PPacket_2eproto() {
  protobuf_AddDesc_PPacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PPacket.proto");
  GOOGLE_CHECK(file != NULL);
  PUpdateLuaString_descriptor_ = file->message_type(0);
  static const int PUpdateLuaString_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaString, value_),
  };
  PUpdateLuaString_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PUpdateLuaString_descriptor_,
      PUpdateLuaString::default_instance_,
      PUpdateLuaString_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaString, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaString, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PUpdateLuaString));
  PUpdateLuaBoolean_descriptor_ = file->message_type(1);
  static const int PUpdateLuaBoolean_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaBoolean, value_),
  };
  PUpdateLuaBoolean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PUpdateLuaBoolean_descriptor_,
      PUpdateLuaBoolean::default_instance_,
      PUpdateLuaBoolean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaBoolean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaBoolean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PUpdateLuaBoolean));
  PUpdateLuaNumber_descriptor_ = file->message_type(2);
  static const int PUpdateLuaNumber_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaNumber, value_),
  };
  PUpdateLuaNumber_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PUpdateLuaNumber_descriptor_,
      PUpdateLuaNumber::default_instance_,
      PUpdateLuaNumber_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaNumber, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdateLuaNumber, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PUpdateLuaNumber));
  PUpdate_descriptor_ = file->message_type(3);
  static const int PUpdate_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdate, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdate, unumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdate, ustring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdate, uboolean_),
  };
  PUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PUpdate_descriptor_,
      PUpdate::default_instance_,
      PUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PUpdate));
  PFilePart_descriptor_ = file->message_type(4);
  static const int PFilePart_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PFilePart, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PFilePart, data_),
  };
  PFilePart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PFilePart_descriptor_,
      PFilePart::default_instance_,
      PFilePart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PFilePart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PFilePart, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PFilePart));
  PControl_descriptor_ = file->message_type(5);
  static const int PControl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PControl, type_),
  };
  PControl_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PControl_descriptor_,
      PControl::default_instance_,
      PControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PControl, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PControl, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PControl));
  PPacket_descriptor_ = file->message_type(6);
  static const int PPacket_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPacket, udata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPacket, fpdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPacket, cdata_),
  };
  PPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PPacket_descriptor_,
      PPacket::default_instance_,
      PPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PPacket));
  PUpdateType_descriptor_ = file->enum_type(0);
  PPacketType_descriptor_ = file->enum_type(1);
  PControlType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PPacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PUpdateLuaString_descriptor_, &PUpdateLuaString::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PUpdateLuaBoolean_descriptor_, &PUpdateLuaBoolean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PUpdateLuaNumber_descriptor_, &PUpdateLuaNumber::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PUpdate_descriptor_, &PUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PFilePart_descriptor_, &PFilePart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PControl_descriptor_, &PControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PPacket_descriptor_, &PPacket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PPacket_2eproto() {
  delete PUpdateLuaString::default_instance_;
  delete PUpdateLuaString_reflection_;
  delete PUpdateLuaBoolean::default_instance_;
  delete PUpdateLuaBoolean_reflection_;
  delete PUpdateLuaNumber::default_instance_;
  delete PUpdateLuaNumber_reflection_;
  delete PUpdate::default_instance_;
  delete PUpdate_reflection_;
  delete PFilePart::default_instance_;
  delete PFilePart_reflection_;
  delete PControl::default_instance_;
  delete PControl_reflection_;
  delete PPacket::default_instance_;
  delete PPacket_reflection_;
}

void protobuf_AddDesc_PPacket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rPPacket.proto\022\006OnSite\"!\n\020PUpdateLuaStr"
    "ing\022\r\n\005value\030\001 \002(\t\"\"\n\021PUpdateLuaBoolean\022"
    "\r\n\005value\030\001 \002(\010\"!\n\020PUpdateLuaNumber\022\r\n\005va"
    "lue\030\001 \002(\001\"\275\001\n\007PUpdate\022\014\n\004name\030\001 \002(\t\022!\n\004t"
    "ype\030\002 \002(\0162\023.OnSite.PUpdateType\022)\n\007uNumbe"
    "r\030\003 \001(\0132\030.OnSite.PUpdateLuaNumber\022)\n\007uSt"
    "ring\030\004 \001(\0132\030.OnSite.PUpdateLuaString\022+\n\010"
    "uBoolean\030\005 \001(\0132\031.OnSite.PUpdateLuaBoolea"
    "n\"+\n\tPFilePart\022\020\n\010filename\030\001 \002(\t\022\014\n\004data"
    "\030\002 \002(\014\".\n\010PControl\022\"\n\004type\030\001 \002(\0162\024.OnSit"
    "e.PControlType\"\220\001\n\007PPacket\022!\n\004type\030\001 \002(\016"
    "2\023.OnSite.PPacketType\022\036\n\005uData\030\002 \001(\0132\017.O"
    "nSite.PUpdate\022!\n\006fpData\030\003 \001(\0132\021.OnSite.P"
    "FilePart\022\037\n\005cData\030\004 \001(\0132\020.OnSite.PContro"
    "l*;\n\013PUpdateType\022\016\n\nPUT_NUMBER\020\000\022\016\n\nPUT_"
    "STRING\020\001\022\014\n\010PUT_BOOL\020\002*<\n\013PPacketType\022\016\n"
    "\nPPT_UPDATE\020\000\022\014\n\010PPT_FILE\020\001\022\017\n\013PPT_CONTR"
    "OL\020\002*+\n\014PControlType\022\014\n\010PCT_TEST\020\000\022\r\n\tPC"
    "T_TEST2\020\001", 729);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PPacket.proto", &protobuf_RegisterTypes);
  PUpdateLuaString::default_instance_ = new PUpdateLuaString();
  PUpdateLuaBoolean::default_instance_ = new PUpdateLuaBoolean();
  PUpdateLuaNumber::default_instance_ = new PUpdateLuaNumber();
  PUpdate::default_instance_ = new PUpdate();
  PFilePart::default_instance_ = new PFilePart();
  PControl::default_instance_ = new PControl();
  PPacket::default_instance_ = new PPacket();
  PUpdateLuaString::default_instance_->InitAsDefaultInstance();
  PUpdateLuaBoolean::default_instance_->InitAsDefaultInstance();
  PUpdateLuaNumber::default_instance_->InitAsDefaultInstance();
  PUpdate::default_instance_->InitAsDefaultInstance();
  PFilePart::default_instance_->InitAsDefaultInstance();
  PControl::default_instance_->InitAsDefaultInstance();
  PPacket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PPacket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PPacket_2eproto {
  StaticDescriptorInitializer_PPacket_2eproto() {
    protobuf_AddDesc_PPacket_2eproto();
  }
} static_descriptor_initializer_PPacket_2eproto_;
const ::google::protobuf::EnumDescriptor* PUpdateType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PUpdateType_descriptor_;
}
bool PUpdateType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PPacketType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PPacketType_descriptor_;
}
bool PPacketType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PControlType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PControlType_descriptor_;
}
bool PControlType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PUpdateLuaString::kValueFieldNumber;
#endif  // !_MSC_VER

PUpdateLuaString::PUpdateLuaString()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PUpdateLuaString::InitAsDefaultInstance() {
}

PUpdateLuaString::PUpdateLuaString(const PUpdateLuaString& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PUpdateLuaString::SharedCtor() {
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PUpdateLuaString::~PUpdateLuaString() {
  SharedDtor();
}

void PUpdateLuaString::SharedDtor() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void PUpdateLuaString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PUpdateLuaString::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PUpdateLuaString_descriptor_;
}

const PUpdateLuaString& PUpdateLuaString::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PPacket_2eproto();
  return *default_instance_;
}

PUpdateLuaString* PUpdateLuaString::default_instance_ = NULL;

PUpdateLuaString* PUpdateLuaString::New() const {
  return new PUpdateLuaString;
}

void PUpdateLuaString::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PUpdateLuaString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PUpdateLuaString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PUpdateLuaString::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PUpdateLuaString::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PUpdateLuaString::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PUpdateLuaString* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PUpdateLuaString*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PUpdateLuaString::MergeFrom(const PUpdateLuaString& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PUpdateLuaString::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PUpdateLuaString::CopyFrom(const PUpdateLuaString& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PUpdateLuaString::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PUpdateLuaString::Swap(PUpdateLuaString* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PUpdateLuaString::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PUpdateLuaString_descriptor_;
  metadata.reflection = PUpdateLuaString_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PUpdateLuaBoolean::kValueFieldNumber;
#endif  // !_MSC_VER

PUpdateLuaBoolean::PUpdateLuaBoolean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PUpdateLuaBoolean::InitAsDefaultInstance() {
}

PUpdateLuaBoolean::PUpdateLuaBoolean(const PUpdateLuaBoolean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PUpdateLuaBoolean::SharedCtor() {
  _cached_size_ = 0;
  value_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PUpdateLuaBoolean::~PUpdateLuaBoolean() {
  SharedDtor();
}

void PUpdateLuaBoolean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PUpdateLuaBoolean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PUpdateLuaBoolean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PUpdateLuaBoolean_descriptor_;
}

const PUpdateLuaBoolean& PUpdateLuaBoolean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PPacket_2eproto();
  return *default_instance_;
}

PUpdateLuaBoolean* PUpdateLuaBoolean::default_instance_ = NULL;

PUpdateLuaBoolean* PUpdateLuaBoolean::New() const {
  return new PUpdateLuaBoolean;
}

void PUpdateLuaBoolean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PUpdateLuaBoolean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PUpdateLuaBoolean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PUpdateLuaBoolean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PUpdateLuaBoolean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool value = 1;
    if (has_value()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PUpdateLuaBoolean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PUpdateLuaBoolean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PUpdateLuaBoolean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PUpdateLuaBoolean::MergeFrom(const PUpdateLuaBoolean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PUpdateLuaBoolean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PUpdateLuaBoolean::CopyFrom(const PUpdateLuaBoolean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PUpdateLuaBoolean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PUpdateLuaBoolean::Swap(PUpdateLuaBoolean* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PUpdateLuaBoolean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PUpdateLuaBoolean_descriptor_;
  metadata.reflection = PUpdateLuaBoolean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PUpdateLuaNumber::kValueFieldNumber;
#endif  // !_MSC_VER

PUpdateLuaNumber::PUpdateLuaNumber()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PUpdateLuaNumber::InitAsDefaultInstance() {
}

PUpdateLuaNumber::PUpdateLuaNumber(const PUpdateLuaNumber& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PUpdateLuaNumber::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PUpdateLuaNumber::~PUpdateLuaNumber() {
  SharedDtor();
}

void PUpdateLuaNumber::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PUpdateLuaNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PUpdateLuaNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PUpdateLuaNumber_descriptor_;
}

const PUpdateLuaNumber& PUpdateLuaNumber::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PPacket_2eproto();
  return *default_instance_;
}

PUpdateLuaNumber* PUpdateLuaNumber::default_instance_ = NULL;

PUpdateLuaNumber* PUpdateLuaNumber::New() const {
  return new PUpdateLuaNumber;
}

void PUpdateLuaNumber::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PUpdateLuaNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PUpdateLuaNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PUpdateLuaNumber::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PUpdateLuaNumber::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double value = 1;
    if (has_value()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PUpdateLuaNumber::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PUpdateLuaNumber* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PUpdateLuaNumber*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PUpdateLuaNumber::MergeFrom(const PUpdateLuaNumber& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PUpdateLuaNumber::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PUpdateLuaNumber::CopyFrom(const PUpdateLuaNumber& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PUpdateLuaNumber::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PUpdateLuaNumber::Swap(PUpdateLuaNumber* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PUpdateLuaNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PUpdateLuaNumber_descriptor_;
  metadata.reflection = PUpdateLuaNumber_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PUpdate::kNameFieldNumber;
const int PUpdate::kTypeFieldNumber;
const int PUpdate::kUNumberFieldNumber;
const int PUpdate::kUStringFieldNumber;
const int PUpdate::kUBooleanFieldNumber;
#endif  // !_MSC_VER

PUpdate::PUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PUpdate::InitAsDefaultInstance() {
  unumber_ = const_cast< ::OnSite::PUpdateLuaNumber*>(&::OnSite::PUpdateLuaNumber::default_instance());
  ustring_ = const_cast< ::OnSite::PUpdateLuaString*>(&::OnSite::PUpdateLuaString::default_instance());
  uboolean_ = const_cast< ::OnSite::PUpdateLuaBoolean*>(&::OnSite::PUpdateLuaBoolean::default_instance());
}

PUpdate::PUpdate(const PUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PUpdate::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  unumber_ = NULL;
  ustring_ = NULL;
  uboolean_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PUpdate::~PUpdate() {
  SharedDtor();
}

void PUpdate::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete unumber_;
    delete ustring_;
    delete uboolean_;
  }
}

void PUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PUpdate_descriptor_;
}

const PUpdate& PUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PPacket_2eproto();
  return *default_instance_;
}

PUpdate* PUpdate::default_instance_ = NULL;

PUpdate* PUpdate::New() const {
  return new PUpdate;
}

void PUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    if (has_unumber()) {
      if (unumber_ != NULL) unumber_->::OnSite::PUpdateLuaNumber::Clear();
    }
    if (has_ustring()) {
      if (ustring_ != NULL) ustring_->::OnSite::PUpdateLuaString::Clear();
    }
    if (has_uboolean()) {
      if (uboolean_ != NULL) uboolean_->::OnSite::PUpdateLuaBoolean::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .OnSite.PUpdateType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OnSite::PUpdateType_IsValid(value)) {
            set_type(static_cast< ::OnSite::PUpdateType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_uNumber;
        break;
      }

      // optional .OnSite.PUpdateLuaNumber uNumber = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unumber()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_uString;
        break;
      }

      // optional .OnSite.PUpdateLuaString uString = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uString:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ustring()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_uBoolean;
        break;
      }

      // optional .OnSite.PUpdateLuaBoolean uBoolean = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uBoolean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uboolean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .OnSite.PUpdateType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .OnSite.PUpdateLuaNumber uNumber = 3;
  if (has_unumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->unumber(), output);
  }

  // optional .OnSite.PUpdateLuaString uString = 4;
  if (has_ustring()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->ustring(), output);
  }

  // optional .OnSite.PUpdateLuaBoolean uBoolean = 5;
  if (has_uboolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->uboolean(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .OnSite.PUpdateType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .OnSite.PUpdateLuaNumber uNumber = 3;
  if (has_unumber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->unumber(), target);
  }

  // optional .OnSite.PUpdateLuaString uString = 4;
  if (has_ustring()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->ustring(), target);
  }

  // optional .OnSite.PUpdateLuaBoolean uBoolean = 5;
  if (has_uboolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->uboolean(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .OnSite.PUpdateType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .OnSite.PUpdateLuaNumber uNumber = 3;
    if (has_unumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unumber());
    }

    // optional .OnSite.PUpdateLuaString uString = 4;
    if (has_ustring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ustring());
    }

    // optional .OnSite.PUpdateLuaBoolean uBoolean = 5;
    if (has_uboolean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uboolean());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PUpdate::MergeFrom(const PUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_unumber()) {
      mutable_unumber()->::OnSite::PUpdateLuaNumber::MergeFrom(from.unumber());
    }
    if (from.has_ustring()) {
      mutable_ustring()->::OnSite::PUpdateLuaString::MergeFrom(from.ustring());
    }
    if (from.has_uboolean()) {
      mutable_uboolean()->::OnSite::PUpdateLuaBoolean::MergeFrom(from.uboolean());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PUpdate::CopyFrom(const PUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_unumber()) {
    if (!this->unumber().IsInitialized()) return false;
  }
  if (has_ustring()) {
    if (!this->ustring().IsInitialized()) return false;
  }
  if (has_uboolean()) {
    if (!this->uboolean().IsInitialized()) return false;
  }
  return true;
}

void PUpdate::Swap(PUpdate* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(unumber_, other->unumber_);
    std::swap(ustring_, other->ustring_);
    std::swap(uboolean_, other->uboolean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PUpdate_descriptor_;
  metadata.reflection = PUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PFilePart::kFilenameFieldNumber;
const int PFilePart::kDataFieldNumber;
#endif  // !_MSC_VER

PFilePart::PFilePart()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PFilePart::InitAsDefaultInstance() {
}

PFilePart::PFilePart(const PFilePart& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PFilePart::SharedCtor() {
  _cached_size_ = 0;
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PFilePart::~PFilePart() {
  SharedDtor();
}

void PFilePart::SharedDtor() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void PFilePart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PFilePart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PFilePart_descriptor_;
}

const PFilePart& PFilePart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PPacket_2eproto();
  return *default_instance_;
}

PFilePart* PFilePart::default_instance_ = NULL;

PFilePart* PFilePart::New() const {
  return new PFilePart;
}

void PFilePart::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_filename()) {
      if (filename_ != &::google::protobuf::internal::kEmptyString) {
        filename_->clear();
      }
    }
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PFilePart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filename = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PFilePart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->filename(), output);
  }

  // required bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PFilePart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // required bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PFilePart::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // required bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PFilePart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PFilePart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PFilePart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PFilePart::MergeFrom(const PFilePart& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filename()) {
      set_filename(from.filename());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PFilePart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PFilePart::CopyFrom(const PFilePart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PFilePart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PFilePart::Swap(PFilePart* other) {
  if (other != this) {
    std::swap(filename_, other->filename_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PFilePart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PFilePart_descriptor_;
  metadata.reflection = PFilePart_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PControl::kTypeFieldNumber;
#endif  // !_MSC_VER

PControl::PControl()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PControl::InitAsDefaultInstance() {
}

PControl::PControl(const PControl& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PControl::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PControl::~PControl() {
  SharedDtor();
}

void PControl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PControl_descriptor_;
}

const PControl& PControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PPacket_2eproto();
  return *default_instance_;
}

PControl* PControl::default_instance_ = NULL;

PControl* PControl::New() const {
  return new PControl;
}

void PControl::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .OnSite.PControlType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OnSite::PControlType_IsValid(value)) {
            set_type(static_cast< ::OnSite::PControlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .OnSite.PControlType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .OnSite.PControlType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .OnSite.PControlType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PControl::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PControl::MergeFrom(const PControl& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PControl::CopyFrom(const PControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PControl::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PControl::Swap(PControl* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PControl_descriptor_;
  metadata.reflection = PControl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PPacket::kTypeFieldNumber;
const int PPacket::kUDataFieldNumber;
const int PPacket::kFpDataFieldNumber;
const int PPacket::kCDataFieldNumber;
#endif  // !_MSC_VER

PPacket::PPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PPacket::InitAsDefaultInstance() {
  udata_ = const_cast< ::OnSite::PUpdate*>(&::OnSite::PUpdate::default_instance());
  fpdata_ = const_cast< ::OnSite::PFilePart*>(&::OnSite::PFilePart::default_instance());
  cdata_ = const_cast< ::OnSite::PControl*>(&::OnSite::PControl::default_instance());
}

PPacket::PPacket(const PPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PPacket::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  udata_ = NULL;
  fpdata_ = NULL;
  cdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PPacket::~PPacket() {
  SharedDtor();
}

void PPacket::SharedDtor() {
  if (this != default_instance_) {
    delete udata_;
    delete fpdata_;
    delete cdata_;
  }
}

void PPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PPacket_descriptor_;
}

const PPacket& PPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PPacket_2eproto();
  return *default_instance_;
}

PPacket* PPacket::default_instance_ = NULL;

PPacket* PPacket::New() const {
  return new PPacket;
}

void PPacket::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_udata()) {
      if (udata_ != NULL) udata_->::OnSite::PUpdate::Clear();
    }
    if (has_fpdata()) {
      if (fpdata_ != NULL) fpdata_->::OnSite::PFilePart::Clear();
    }
    if (has_cdata()) {
      if (cdata_ != NULL) cdata_->::OnSite::PControl::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .OnSite.PPacketType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OnSite::PPacketType_IsValid(value)) {
            set_type(static_cast< ::OnSite::PPacketType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uData;
        break;
      }

      // optional .OnSite.PUpdate uData = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_udata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_fpData;
        break;
      }

      // optional .OnSite.PFilePart fpData = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fpData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fpdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_cData;
        break;
      }

      // optional .OnSite.PControl cData = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .OnSite.PPacketType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .OnSite.PUpdate uData = 2;
  if (has_udata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->udata(), output);
  }

  // optional .OnSite.PFilePart fpData = 3;
  if (has_fpdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fpdata(), output);
  }

  // optional .OnSite.PControl cData = 4;
  if (has_cdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->cdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .OnSite.PPacketType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .OnSite.PUpdate uData = 2;
  if (has_udata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->udata(), target);
  }

  // optional .OnSite.PFilePart fpData = 3;
  if (has_fpdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->fpdata(), target);
  }

  // optional .OnSite.PControl cData = 4;
  if (has_cdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->cdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PPacket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .OnSite.PPacketType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .OnSite.PUpdate uData = 2;
    if (has_udata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->udata());
    }

    // optional .OnSite.PFilePart fpData = 3;
    if (has_fpdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fpdata());
    }

    // optional .OnSite.PControl cData = 4;
    if (has_cdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PPacket::MergeFrom(const PPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_udata()) {
      mutable_udata()->::OnSite::PUpdate::MergeFrom(from.udata());
    }
    if (from.has_fpdata()) {
      mutable_fpdata()->::OnSite::PFilePart::MergeFrom(from.fpdata());
    }
    if (from.has_cdata()) {
      mutable_cdata()->::OnSite::PControl::MergeFrom(from.cdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPacket::CopyFrom(const PPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_udata()) {
    if (!this->udata().IsInitialized()) return false;
  }
  if (has_fpdata()) {
    if (!this->fpdata().IsInitialized()) return false;
  }
  if (has_cdata()) {
    if (!this->cdata().IsInitialized()) return false;
  }
  return true;
}

void PPacket::Swap(PPacket* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(udata_, other->udata_);
    std::swap(fpdata_, other->fpdata_);
    std::swap(cdata_, other->cdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PPacket_descriptor_;
  metadata.reflection = PPacket_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OnSite

// @@protoc_insertion_point(global_scope)
